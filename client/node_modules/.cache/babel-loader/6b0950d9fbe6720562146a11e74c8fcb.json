{"ast":null,"code":"var _jsxFileName = \"/media/ces-user/Localdisk/ReactJs/APIAuthentication/client/src/components/HOCs/authGuard.js\";\nimport react, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (OriginalComponent => {\n  class MixedComponent extends Component {\n    // constructor(props){\n    //     super(props);\n    // };\n    componentDidMount() {\n      if (!this.props.isAuth || !this.props.jwtToken) {\n        this.props.history.push('/');\n      }\n    }\n\n    componentDidUpdate() {\n      if (!this.props.isAuth || !this.props.jwtToken) {\n        this.props.history.push('/');\n      }\n    }\n\n    render() {\n      const jwt = localStorage.getItem('JWT_TOKEN') ? true : false;\n      return /*#__PURE__*/_jsxDEV(OriginalComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  function mapStateToProps(state) {\n    return {\n      isAuth: state.auth.isAuthenticated,\n      jwtToken: state.auth.token\n    };\n  }\n\n  return connect(mapStateToProps)(MixedComponent);\n});","map":{"version":3,"sources":["/media/ces-user/Localdisk/ReactJs/APIAuthentication/client/src/components/HOCs/authGuard.js"],"names":["react","Component","connect","OriginalComponent","MixedComponent","componentDidMount","props","isAuth","jwtToken","history","push","componentDidUpdate","render","jwt","localStorage","getItem","mapStateToProps","state","auth","isAuthenticated","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,gBAAgBC,iBAAD,IAAuB;AAElC,QAAMC,cAAN,SAA6BH,SAA7B,CAAsC;AAElC;AACA;AACA;AAEAI,IAAAA,iBAAiB,GAAE;AACf,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAZ,IAAsB,CAAC,KAAKD,KAAL,CAAWE,QAAtC,EAA+C;AAC3C,aAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACJ;;AAEDC,IAAAA,kBAAkB,GAAE;AAChB,UAAI,CAAC,KAAKL,KAAL,CAAWC,MAAZ,IAAsB,CAAC,KAAKD,KAAL,CAAWE,QAAtC,EAA+C;AAC3C,aAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACJ;;AAEDE,IAAAA,MAAM,GAAE;AACJ,YAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoC,IAApC,GAA2C,KAAvD;AACA,0BAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AArBiC;;AAwBtC,WAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,WAAO;AACHV,MAAAA,MAAM,EAAEU,KAAK,CAACC,IAAN,CAAWC,eADhB;AAEHX,MAAAA,QAAQ,EAAES,KAAK,CAACC,IAAN,CAAWE;AAFlB,KAAP;AAIH;;AAED,SAAOlB,OAAO,CAACc,eAAD,CAAP,CAAyBZ,cAAzB,CAAP;AACH,CAlCD","sourcesContent":["import react, { Component} from 'react';\nimport { connect } from 'react-redux';\nexport default (OriginalComponent) => {\n\n    class MixedComponent extends Component{\n\n        // constructor(props){\n        //     super(props);\n        // };\n\n        componentDidMount(){\n            if( !this.props.isAuth || !this.props.jwtToken){\n                this.props.history.push('/');\n            }\n        }\n\n        componentDidUpdate(){\n            if( !this.props.isAuth || !this.props.jwtToken){\n                this.props.history.push('/');\n            }\n        }\n\n        render(){\n            const jwt = localStorage.getItem('JWT_TOKEN') ? true : false;\n            return <OriginalComponent/>\n        }\n    }\n\n    function mapStateToProps(state){\n        return {\n            isAuth: state.auth.isAuthenticated,\n            jwtToken: state.auth.token\n        }\n    }\n\n    return connect(mapStateToProps)(MixedComponent); \n};\n"]},"metadata":{},"sourceType":"module"}