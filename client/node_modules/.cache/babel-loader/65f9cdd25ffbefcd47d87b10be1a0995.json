{"ast":null,"code":"import axios from 'axios';\nimport { AUTH_SIGN_UP, AUTH_ERR } from './types';\n/* \nActionCreators -> create/return actions or ({}) or function ->  dispatched -> middlewares -> reducers\n*/\n\nexport const signUp = data => {\n  return async dispatch => {\n    /*  1 make HTTP requet to backend\n        2 take the backend response (jwt token)\n        3 dispatch user just signed up (with jwt token)\n        4 save the jwt token to locaStorage\n    */\n    try {\n      const res = await axios.post('http://localhost:5000/users/signup', data);\n      console.log('res', res);\n      dispatch({\n        type: AUTH_SIGN_UP,\n        payload: res.data.token\n      });\n      localStorage.setItem('JWT_TOKEN', res.data.token);\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERR,\n        payload: 'Email is already in use!'\n      });\n      console.log('error', error);\n    }\n  };\n};","map":{"version":3,"sources":["/media/ces-user/Localdisk/ReactJs/APIAuthentication/client/src/actions/index.js"],"names":["axios","AUTH_SIGN_UP","AUTH_ERR","signUp","data","dispatch","res","post","console","log","type","payload","token","localStorage","setItem","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,SAAvC;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAGC,IAAI,IAAI;AAC1B,SAAO,MAAMC,QAAN,IAAkB;AACrB;AACR;AACA;AACA;AACA;AAEQ,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAW,oCAAX,EAAiDH,IAAjD,CAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;AAEAD,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAET,YADD;AAELU,QAAAA,OAAO,EAAEL,GAAG,CAACF,IAAJ,CAASQ;AAFb,OAAD,CAAR;AAKAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCR,GAAG,CAACF,IAAJ,CAASQ,KAA3C;AACH,KAVD,CAUE,OAAOG,KAAP,EAAc;AACZV,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAER,QADD;AAELS,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIAH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,KAArB;AACH;AACJ,GAxBD;AAyBH,CA1BM","sourcesContent":["import axios from 'axios';\n\nimport { AUTH_SIGN_UP, AUTH_ERR } from './types';\n/* \nActionCreators -> create/return actions or ({}) or function ->  dispatched -> middlewares -> reducers\n*/\n\nexport const signUp = data => {\n    return async dispatch => {\n        /*  1 make HTTP requet to backend\n            2 take the backend response (jwt token)\n            3 dispatch user just signed up (with jwt token)\n            4 save the jwt token to locaStorage\n        */\n\n        try {\n            const res = await axios.post('http://localhost:5000/users/signup', data);\n            console.log('res', res);\n\n            dispatch({\n                type: AUTH_SIGN_UP,\n                payload: res.data.token\n            });\n\n            localStorage.setItem('JWT_TOKEN', res.data.token);\n        } catch (error) {\n            dispatch({\n                type: AUTH_ERR,\n                payload: 'Email is already in use!'\n            });\n            console.log('error', error);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}